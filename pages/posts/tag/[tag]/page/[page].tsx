import { GetStaticPaths, GetStaticProps } from 'next'
import Head from 'next/head'
import Pagination from '../../../../../components/Pagination/Pagination'
import SinglePost from '../../../../../components/Post/SinglePost'
import Tag from '../../../../../components/Tag/Tag'
import {getAllPost, getAllTags, getNumberOfPages, getNumberOfPagesByTag, getPostByTagAndPage, getPostsByPage, getPostsForTopPage} from "../../../../../lib/notionAPI"

export const getStaticPaths: GetStaticPaths = async() => {
    const allTags = await getAllTags()
    let params = []

    await Promise.all(
      allTags.map((tag: string) => {
        return getNumberOfPagesByTag(tag).then((numberOfPageByTag: number) => {
          for(let i = 1; i <= numberOfPageByTag; i++){
            params.push({params: {tag: tag, page: i.toString()}})
        }
        })
      })
    )
    // console.log(params)
 
    return {
        paths: params,
        fallback: "blocking"
    }
}

export const getStaticProps: GetStaticProps = async(context) => {
    console.log(context.params)
    const currentPage: string = context.params?.page.toString()
    const currentTag: string = context.params?.tag.toString()
    const allTags = await getAllTags()

    const upperCaseCurrentTag = currentTag.charAt(0).toUpperCase() + currentTag.slice(1)

    const posts = await getPostByTagAndPage(upperCaseCurrentTag, parseInt(currentPage, 10))
    
    const numberOfPagesByTag = await getNumberOfPagesByTag(upperCaseCurrentTag)

  return {
    props: {
        posts: posts,
        numberOfPagesByTag: numberOfPagesByTag,
        upperCaseCurrentTag: upperCaseCurrentTag,
        allTags: allTags
    },
    revalidate: 10,
  }
}

const BlogTagPageList = ({numberOfPagesByTag, upperCaseCurrentTag, posts, allTags}) => {
  // console.log(allPosts[0].properties.Description.rich_text[0].text.content)
  
  return (
    <div className='container h-full w-full mx-auto'>
      <Head>
        <title>Notion-Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className='container w-full mt-16'>
        <h1 className='text-5xl font-medium text-center mb-16'>
          Notion Blog
        </h1>
        <section className='sm:grid grid-cols-2 gap-3 mx-auto'>
            {posts.map((post) => {
            return (
                <div key={post.id}>
                <SinglePost
                    title={post.title}
                    description={post.description}
                    date={post.date}
                    tags={post.tags}
                    slug={post.slug}
                    isPaginationPage={true}
                />
                </div>
            )
            })}
        </section>
        <Pagination numberOfPage={numberOfPagesByTag} tag={upperCaseCurrentTag} />
        <Tag tags={allTags} />
      </main>
    </div>
  )
}

export default BlogTagPageList